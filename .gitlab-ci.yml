variables:
  IMAGE_NAME: ${CI_REGISTRY_IMAGE}/build:${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHA}
  SHARE_PATH: /builds/${CI_PROJECT_PATH}/share

stages:
- build
- publish

container_build:
  stage: build
  image: docker:stable
  services:
  - docker:stable-dind

  variables:
    DOCKER_DRIVER: overlay2

  script:
  - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token --password-stdin "${CI_REGISTRY}"
  - docker pull "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}" || true
  - docker build --cache-from "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}" -t "$IMAGE_NAME" .
  - docker save "$IMAGE_NAME" -o "${SHARE_PATH}/image.tar"
  - docker run -it -v ${SHARE_PATH}:/anchore-engine docker.io/anchore/inline_scan:dev
  - docker push "$IMAGE_NAME"

  artifacts:
    name: ${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}
    paths:
    - anchore-reports/*

anchore_reports:
  stage: publish
  image: alpine:latest
  dependencies:
  - container_build

  variables:
    GIT_STRATEGY: none

  script:
  - apk add jq
  - |
      echo "Parsing anchore reports."
      for f in anchore-reports/*; do
        if [[ "$f" =~ "content-os" ]]; then
          printf "\n%s\n" "The following OS packages are installed on ${IMAGE_NAME}:"
          jq '[.content | sort_by(.package) | .[] | {package: .package, version: .version}]' anchore-reports/image-content-os-report.json || true
        fi
        if [[ "$f" =~ "vuln" ]]; then
          printf "\n%s\n" "The following vulnerabilites were found on ${IMAGE_NAME}:"
          jq '[.vulnerabilities | group_by(.package) | .[] | {package: .[0].package, vuln: [.[].vuln]}]' anchore-reports/image-vuln-report.json || true
        fi
      done

container_publish:
  stage: publish
  image: docker:stable
  services:
  - docker:stable-dind

  variables:
    DOCKER_DRIVER: overlay2
    GIT_STRATEGY: none

  script:
  - docker login -u gitlab-ci-token -p "$CI_JOB_TOKEN" "${CI_REGISTRY}"
  - docker pull "$IMAGE_NAME"
  - docker tag "$IMAGE_NAME" "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}"
  - docker push "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}"
  - |
      if [ "$CI_COMMIT_REF_NAME" == "master" ]; then
        docker tag "$IMAGE_NAME" "${CI_REGISTRY_IMAGE}:latest"
        docker push "${CI_REGISTRY_IMAGE}:latest"
      fi
